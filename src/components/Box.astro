---
import { Image } from 'astro:assets';
import type { Box as Props } from '~/types';

const {
  size,
  image = await Astro.slots.render('image'),
  overlayColor = 'bg-slate-500/75',
  title,
  link,
  content,
} = Astro.props;

const sizeClasses = {
  small: {
    wrapper: 'col-span-1',
    content: 'p-12 lg:p-5',
  },
  medium: {
    wrapper: 'lg:col-span-2 lg:row-span-2',
    content: 'p-12',
  },
  large: {
    wrapper: 'lg:col-span-2 lg:row-span-3',
    content: 'p-12',
  },
};

const selectedSize = sizeClasses[size] ?? sizeClasses.medium;
---

<div class={`${selectedSize.wrapper} aspect-square lg:aspect-auto relative group overflow-hidden`}>
  <slot name="image" />
  <div class={`flex flex-col justify-between absolute inset-0 lg:opacity-0 group-hover:opacity-100 transition duration-500 ease-in-out ${overlayColor} ${selectedSize.content}`}>
    {title && <h1 class="font-light text-white text-3xl uppercase" set:html={title} />}
    {content && <p class="text-white text-base" set:html={content} />}

    <div>
      <a href={link.href} class="float-right font-medium text-white uppercase" target={link.target ? link.target : undefined} set:html={link.text} />
    </div>
  </div>
</div>